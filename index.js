const TelegramBot = require("node-telegram-bot-api");
const token = "YOUR_BOT_TOKEN";
const bot = new TelegramBot(token, { polling: true });

const adminChatId = 1032236389;

const guestMultiplier = {
  "–î–æ 50": 1,
  "50-75": 1.1,
  "76-100": 1.2,
  "101-150": 1.7,
  "151-200": 2,
  "–ë–æ–ª–µ–µ 200": 2.5,
};

const locationExtra = {
  –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫: 0,
  "–ü—Ä–∏–≥–æ—Ä–æ–¥ (–¥–æ 30 –∫–º)": 5000,
  –î—Ä—É–≥–æ–µ: 1.5,
};

let userSessions = {};

bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  bot.sendMessage(
    chatId,
    "–í–∞–∂–Ω—ã–º–∏ —Ñ–∞–∫—Ç–æ—Ä–∞–º–∏ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞ —è–≤–ª—è–µ—Ç—Å—è —Å–ª–∞–∂–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –≤–µ–¥—É—â–µ–≥–æ –∏ DJ, –∞ —Ç–∞–∫–∂–µ –Ω–∞–ª–∏—á–∏–µ —Ö–æ—Ä–æ—à–µ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è. –°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∫–ª—é—á–∞–µ—Ç —ç—Ç–∏ –ø–æ–∑–∏—Ü–∏–∏.\n\n(–í–µ–¥—É—â–∏–π+DJ+–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ)"
  );
});

bot.onText(/\/survey/, (msg) => {
  const chatId = msg.chat.id;
  userSessions[chatId] = { userId: msg.from.id, username: msg.from.username || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π" };
  askDate(chatId);
});

function askDate(chatId) {
  bot.sendMessage(chatId, "üìÖ –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:", {
    reply_markup: { force_reply: true },
  });
}

bot.on("message", (msg) => {
  const chatId = msg.chat.id;
  if (!userSessions[chatId]) return;

  const session = userSessions[chatId];
  
  function validateResponse(validOptions, response) {
    return validOptions.includes(response);
  }

  if (!session.date) {
    session.date = msg.text;
    askEvent(chatId);
  } else if (!session.event && validateResponse(["–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤", "–°–≤–∞–¥—å–±–∞", "–í—ã–ø—É—Å–∫–Ω–æ–π", "–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è", "–û–±—É—á–µ–Ω–∏–µ/–¢–∏–º–±–∏–ª–¥–∏–Ω–≥", "–î—Ä—É–≥–æ–µ"], msg.text)) {
    session.event = msg.text;
    askGuests(chatId);
  } else if (!session.guests && validateResponse(Object.keys(guestMultiplier), msg.text)) {
    session.guests = msg.text;
    askLocation(chatId);
  } else if (!session.location && validateResponse(Object.keys(locationExtra), msg.text)) {
    session.location = msg.text;
    askHours(chatId);
  } else if (!session.hours && !isNaN(parseInt(msg.text))) {
    session.hours = parseInt(msg.text);
    askBudget(chatId);
  } else if (!session.budget && validateResponse(["30-50", "51-75", "76-100", "101-150", "151-200", "–ë–æ–ª–µ–µ 200"], msg.text)) {
    session.budget = msg.text;
    askWords(chatId);
  } else if (!session.words) {
    session.words = msg.text;
    sendSummary(chatId);
  } else {
    bot.sendMessage(chatId, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö.");
  }
});

function askEvent(chatId) {
  bot.sendMessage(chatId, "üéâ –ö–∞–∫–æ–µ —Å–æ–±—ã—Ç–∏–µ?", {
    reply_markup: {
      keyboard: [["–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤", "–°–≤–∞–¥—å–±–∞"], ["–í—ã–ø—É—Å–∫–Ω–æ–π", "–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è"], ["–û–±—É—á–µ–Ω–∏–µ/–¢–∏–º–±–∏–ª–¥–∏–Ω–≥", "–î—Ä—É–≥–æ–µ"]],
      one_time_keyboard: true,
    },
  });
}

function askGuests(chatId) {
  bot.sendMessage(chatId, "üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π:", {
    reply_markup: {
      keyboard: [["–î–æ 50", "50-75"], ["76-100", "101-150"], ["151-200", "–ë–æ–ª–µ–µ 200"]],
      one_time_keyboard: true,
    },
  });
}

function askLocation(chatId) {
  bot.sendMessage(chatId, "üìç –ì–¥–µ –ø—Ä–æ–π–¥–µ—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ?", {
    reply_markup: {
      keyboard: [["–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫"], ["–ü—Ä–∏–≥–æ—Ä–æ–¥ (–¥–æ 30 –∫–º)"], ["–î—Ä—É–≥–æ–µ"]],
      one_time_keyboard: true,
    },
  });
}

function askHours(chatId) {
  bot.sendMessage(chatId, "‚è≥ –°–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –±—É–¥–µ—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ?");
}

function askBudget(chatId) {
  bot.sendMessage(chatId, "üí∞ –ö–∞–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–∞–∂–µ—Ç—Å—è –∞–¥–µ–∫–≤–∞—Ç–Ω–æ–π? (–≤ —Ç—ã—Å—è—á–∞—Ö —Ä—É–±–ª–µ–π)", {
    reply_markup: {
      keyboard: [["30-50", "51-75"], ["76-100", "101-150"], ["151-200", "–ë–æ–ª–µ–µ 200"]],
      one_time_keyboard: true,
    },
  });
}

function askWords(chatId) {
  bot.sendMessage(chatId, "üîÆ –ö–∞–∫–∏–º–∏ 3 —Å–ª–æ–≤–∞–º–∏ –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –∑–∞–ø–æ–º–Ω–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ?");
}

function sendSummary(chatId) {
  const session = userSessions[chatId];
  let basePrice = 14000;
  const guestFactor = guestMultiplier[session.guests] || 1;
  const locationFactor = locationExtra[session.location] || 1;
  const totalPrice = basePrice * guestFactor + (locationFactor > 1 ? basePrice * (locationFactor - 1) : locationFactor);

  const summaryMessage = `‚úÖ –í–∞—à–∞ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${totalPrice.toLocaleString()}‚ÇΩ\n\n–Ø —Å—Ç–∞—Ä–∞–ª—Å—è —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –Ω–∞—à–∏ –≤—Ä–µ–º—è –∏ –Ω–µ—Ä–≤—ã, –ø–æ—ç—Ç–æ–º—É —Å—Ç–æ–∏–º–æ—Å—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–Ω–∞—è, –Ω–æ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è. –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–∞—è —Å–º–µ—Ç–∞ –ø–æ—Å–ª–µ –≤—Å—Ç—Ä–µ—á–∏ –∏ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã.`;

  bot.sendMessage(chatId, summaryMessage);

  const adminMessage = `üì© –ù–æ–≤—ã–π –æ–ø—Ä–æ—Å\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @${session.username} (ID: ${session.userId})\nüîó –ß–∞—Ç: [–û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç](tg://user?id=${session.userId})\n\nüìÖ –î–∞—Ç–∞: ${session.date}\nüéâ –°–æ–±—ã—Ç–∏–µ: ${session.event}\nüë• –ì–æ—Å—Ç–∏: ${session.guests}\nüìç –õ–æ–∫–∞—Ü–∏—è: ${session.location}\n‚è≥ –í—Ä–µ–º—è: ${session.hours} —á–∞—Å–æ–≤\nüí∞ –ë—é–¥–∂–µ—Ç: ${session.budget} —Ç—ã—Å.‚ÇΩ\nüîÆ –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: ${session.words}\nüíµ –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${totalPrice.toLocaleString()}‚ÇΩ`;

  bot.sendMessage(adminChatId, adminMessage, { parse_mode: "Markdown" });
  delete userSessions[chatId];
}