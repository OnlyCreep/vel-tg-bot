const TelegramBot = require("node-telegram-bot-api");
const moment = require("moment");
moment.locale("ru");

// –£–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω
const TOKEN = "7339008763:AAHU4_ZQ1jKwdmOfSMg6WvN0VLW7MNIRHv0";
const ADMIN_CHAT_ID = -4701713936;

const bot = new TelegramBot(TOKEN, { polling: true });

// –°–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const userState = {};
const rateLimit = {};

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç–æ–∏–º–æ—Å—Ç–∏
const seasonRates = {
  —è–Ω–≤–∞—Ä—å: { "–≤—Å-—á—Ç": 11000, "–ø—Ç-—Å–±": 14000 },
  —Ñ–µ–≤—Ä–∞–ª—å: { "–≤—Å-—á—Ç": 11000, "–ø—Ç-—Å–±": 14000 },
  –º–∞—Ä—Ç: { "–≤—Å-—á—Ç": 11000, "–ø—Ç-—Å–±": 14000 },
  –∞–ø—Ä–µ–ª—å: { "–≤—Å-—á—Ç": 11000, "–ø—Ç-—Å–±": 14000 },
  –º–∞–π: { "–≤—Å-—á—Ç": 11000, "–ø—Ç-—Å–±": 14000 },
  –∏—é–Ω—å: { "–≤—Å-—á—Ç": 14000, "–ø—Ç-—Å–±": 15000 },
  –∏—é–ª—å: { "–≤—Å-—á—Ç": 14000, "–ø—Ç-—Å–±": 15000 },
  –∞–≤–≥—É—Å—Ç: { "–≤—Å-—á—Ç": 14000, "–ø—Ç-—Å–±": 15000 },
  —Å–µ–Ω—Ç—è–±—Ä—å: { "–≤—Å-—á—Ç": 11000, "–ø—Ç-—Å–±": 14000 },
  –æ–∫—Ç—è–±—Ä—å: { "–≤—Å-—á—Ç": 11000, "–ø—Ç-—Å–±": 14000 },
  –Ω–æ—è–±—Ä—å: { "–≤—Å-—á—Ç": 11000, "–ø—Ç-—Å–±": 14000 },
  –¥–µ–∫–∞–±—Ä—å: { "–¥–æ 14": 14000, "—Å 15": 15000 },
};

const eventOptions = [
  "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤",
  "–°–≤–∞–¥—å–±–∞",
  "–í—ã–ø—É—Å–∫–Ω–æ–π",
  "–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è",
  "–û–±—É—á–µ–Ω–∏–µ/–¢–∏–º–±–∏–ª–¥–∏–Ω–≥",
  "–î—Ä—É–≥–æ–µ",
];
const guestMultiplier = {
  "–î–æ 50": 1,
  "50-75": 1.1,
  "76-100": 1.2,
  "101-150": 1.7,
  "151-200": 2,
  "–ë–æ–ª–µ–µ 200": 2.5,
};
const locationExtra = {
  –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫: 0,
  "–ü—Ä–∏–≥–æ—Ä–æ–¥ (–¥–æ 30 –∫–º)": 5000,
  –î—Ä—É–≥–æ–µ: 1.5,
};
const budgetOptions = [
  "30-50",
  "51-75",
  "76-100",
  "101-150",
  "151-200",
  "–ë–æ–ª–µ–µ 200",
];
const bonusOptions = [
  "–î–æ–ø. —á–∞—Å –¥–∏–¥–∂–µ—è",
  "1.5 —á–∞—Å–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∞",
  "1.5 —á–∞—Å–∞ —Ä–∏–ª—Å–º–µ–π–∫–µ—Ä–∞",
];

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.onText(/\/start/, async (msg) => {
  const chatId = msg.chat.id;
  userState[chatId] = {};

  await bot.sendMessage(
    chatId,
    "–í–∞–∂–Ω—ã–º–∏ —Ñ–∞–∫—Ç–æ—Ä–∞–º–∏ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞ —è–≤–ª—è–µ—Ç—Å—è —Å–ª–∞–∂–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –≤–µ–¥—É—â–µ–≥–æ –∏ DJ, –∞ —Ç–∞–∫–∂–µ –Ω–∞–ª–∏—á–∏–µ —Ö–æ—Ä–æ—à–µ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è. –°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∫–ª—é—á–∞–µ—Ç —ç—Ç–∏ –ø–æ–∑–∏—Ü–∏–∏.\n\n(–í–µ–¥—É—â–∏–π+DJ+–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ)",
    {
      reply_markup: {
        inline_keyboard: [
          [{ text: "–ü–æ–µ—Ö–∞–ª–∏üöÇ", callback_data: "start_survey" }],
        ],
      },
    }
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü–æ–µ—Ö–∞–ª–∏"
bot.on("callback_query", async (callbackQuery) => {
  const chatId = callbackQuery.message.chat.id;

  if (callbackQuery.data === "start_survey") {
    userState[chatId] = { step: 1, baseRate: 15000 };
    await bot.sendMessage(
      chatId,
      "üìÜ –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 15 —è–Ω–≤–∞—Ä—è)"
    );
  }
});

bot.on("callback_query", async (callbackQuery) => {
  const chatId = callbackQuery.message.chat.id;
  const data = callbackQuery.data;

  if (data === "skip_words") {
    userState[chatId].threeWords = "–ü—Ä–æ–ø—É—â–µ–Ω–æ";
    userState[chatId].step++;
    await askImageChoice(chatId);
  }
});


// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.on("message", async (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text.trim();

  if (msg.text.startsWith("/")) return;

  if (!userState[chatId] || !userState[chatId].step) {
    await bot.sendMessage(
      chatId,
      "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ù–∞–∂–º–∏—Ç–µ '–ü–æ–µ—Ö–∞–ª–∏' –¥–ª—è –Ω–∞—á–∞–ª–∞.",
      {
        reply_markup: {
          inline_keyboard: [
            [{ text: "–ü–æ–µ—Ö–∞–ª–∏üöÇ", callback_data: "start_survey" }],
          ],
        },
      }
    );
    return;
  }

  const state = userState[chatId];

  switch (state.step) {
    case 1:
      const dateMatch = text.match(/^(\d{1,2})\s([–∞-—è]+)$/i);
      if (!dateMatch) {
        return bot.sendMessage(chatId, "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: 15 —è–Ω–≤–∞—Ä—è");
      }

      const day = parseInt(dateMatch[1]);
      const month = dateMatch[2].toLowerCase();
      const rate = getSeasonRate(day, month);

      if (!rate) {
        return bot.sendMessage(chatId, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –º–µ—Å—è—Ü. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
      }

      state.date = `${day} ${month}`;
      state.baseRate = rate;
      state.step++;
      await bot.sendMessage(chatId, "üéâ –ö–∞–∫–æ–µ —Å–æ–±—ã—Ç–∏–µ?", {
        reply_markup: {
          keyboard: eventOptions.map((e) => [e]),
          one_time_keyboard: true,
        },
      });
      break;

    case 2:
      if (!eventOptions.includes(text)) {
        return bot.sendMessage(
          chatId,
          "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤."
        );
      }

      state.event = text;
      state.step++;
      await bot.sendMessage(chatId, "üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π", {
        reply_markup: {
          keyboard: Object.keys(guestMultiplier).map((e) => [e]),
          one_time_keyboard: true,
        },
      });
      break;

    case 3:
      if (!guestMultiplier[text]) {
        return bot.sendMessage(
          chatId,
          "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤."
        );
      }

      state.guestCount = text;
      state.baseRate *= guestMultiplier[text];
      state.step++;
      await bot.sendMessage(chatId, "üìç –ì–¥–µ –ø—Ä–æ–π–¥–µ—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ?", {
        reply_markup: {
          keyboard: Object.keys(locationExtra).map((e) => [e]),
          one_time_keyboard: true,
        },
      });
      break;

    case 4:
      if (!locationExtra.hasOwnProperty(text)) {
        return bot.sendMessage(
          chatId,
          "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤."
        );
      }

      state.location = text;
      state.baseRate =
        text === "–î—Ä—É–≥–æ–µ"
          ? state.baseRate * 1.5
          : state.baseRate + locationExtra[text];
      state.step++;
      await bot.sendMessage(chatId, "‚è≥ –°–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –±—É–¥–µ—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ?");
      break;

    case 5:
      const hours = parseInt(text);
      if (isNaN(hours) || hours <= 0) {
        return bot.sendMessage(chatId, "–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —á–∏—Å–ª–æ.");
      }

      state.hours = hours;
      state.totalPrice = state.baseRate * hours;
      state.step++;
      await bot.sendMessage(
        chatId,
        "üí∞ –ö–∞–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–∞–∂–µ—Ç—Å—è –∞–¥–µ–∫–≤–∞—Ç–Ω–æ–π –∑–∞–¥–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –∏ –¢–ó? (—Ç—ã—Å.‚ÇΩ)",
        {
          reply_markup: {
            keyboard: budgetOptions.map((e) => [e]),
            one_time_keyboard: true,
          },
        }
      );
      break;

    case 6:
      if (!budgetOptions.includes(text)) {
        return bot.sendMessage(
          chatId,
          "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤."
        );
      }

      state.budget = text;
      state.step++;
      await bot.sendMessage(
        chatId,
        "üîÆ –ö–∞–∫–∏–º–∏ 3 —Å–ª–æ–≤–∞–º–∏ –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –∑–∞–ø–æ–º–Ω–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ?",
        {
          reply_markup: {
            inline_keyboard: [
              [{ text: "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data: "skip_words" }],
            ],
          },
        }
      );
      break;

    case 7:
      const words = text.split(/\s+/);
      if (words.length !== 3) {
        return bot.sendMessage(
          chatId,
          "–í–≤–µ–¥–∏—Ç–µ —Ä–æ–≤–Ω–æ —Ç—Ä–∏ —Å–ª–æ–≤–∞, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª–æ–º."
        );
      }

      state.threeWords = text;
      state.step++;
      await askImageChoice(chatId);
      break;

    case 8:
      await handleImageChoice(chatId, text);
      break;

    case 9:
      if (!bonusOptions.includes(text)) {
        return bot.sendMessage(
          chatId,
          "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤."
        );
      }

      state.bonus = text;
      state.step++;

      await bot.sendMessage(
        chatId,
        `‚úÖ –í–∞—à –±–æ–Ω—É—Å —É—á—Ç–µ–Ω! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –æ–ø—Ä–æ—Å–∞.\n\n‚úÖ –í–∞—à–∞ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${state.totalPrice}‚ÇΩ\n–Ø —Å—Ç–∞—Ä–∞–ª—Å—è —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –Ω–∞—à–∏ –≤—Ä–µ–º—è –∏ –Ω–µ—Ä–≤—ã, –ø–æ—ç—Ç–æ–º—É —Å—Ç–æ–∏–º–æ—Å—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–Ω–∞—è –∏ –≤—Å–µ-—Ç–∞–∫–∏ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è. –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–∞—è —Å–º–µ—Ç–∞ –ø–æ—Å–ª–µ –≤—Å—Ç—Ä–µ—á–∏ –∏ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã.`,
        {
          reply_markup: {
            inline_keyboard: [
              [
                {
                  text: "–°–≤—è–∂–∏—Ç–µ –º–µ–Ω—è —Å —á–µ–ª–æ–≤–µ–∫–æ–º",
                  callback_data: "contact_me",
                },
              ],
              [
                {
                  text: "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ø–∞–∫–µ—Ç–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è",
                  callback_data: "package_offers",
                },
              ],
            ],
          },
        }
      );
      break;

    case 10:
      if (
        !["–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤", "–í—ã–ø—É—Å–∫–Ω–æ–π", "–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è", "–°–≤–∞–¥—å–±–∞"].includes(text)
      ) {
        return bot.sendMessage(
          chatId,
          "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤."
        );
      }

      state.package = text;
      await bot.sendMessage(
        chatId,
        `‚úÖ –í—ã –≤—ã–±—Ä–∞–ª–∏ –ø–∞–∫–µ—Ç "${text}". –í–æ—Ç –ø—Ä–∏–º–µ—Ä—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è:`
      );

      const packageImages = {
        –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤: ["./images/corporate1.jpg"],
        –í—ã–ø—É—Å–∫–Ω–æ–π: ["./images/graduation1.jpg", "./images/graduation2.jpg"],
        "–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è": ["./images/birthday1.jpg"],
        –°–≤–∞–¥—å–±–∞: ["./images/wedding1.jpg", "./images/wedding2.jpg"],
      };

      for (const image of packageImages[text]) {
        await bot.sendPhoto(chatId, image);
      }

      await bot.sendMessage(chatId, "üîπ –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ:", {
        reply_markup: {
          inline_keyboard: [
            [{ text: "–°–≤—è–∂–∏—Ç–µ –º–µ–Ω—è —Å —á–µ–ª–æ–≤–µ–∫–æ–º", callback_data: "contact_me" }],
            [
              {
                text: "–î—Ä—É–≥–∏–µ –ø–∞–∫–µ—Ç–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è",
                callback_data: "package_offers",
              },
            ],
          ],
        },
      });

      // –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω—É –∏—Ç–æ–≥–æ–≤—ã–π –æ—Ç–≤–µ—Ç
      await sendAdminSummary(chatId);
      break;
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –±—é–¥–∂–µ—Ç–∞
async function askBudget(chatId) {
  userState[chatId].step = 6;
  await bot.sendMessage(
    chatId,
    "üí∞ –ö–∞–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–∞–∂–µ—Ç—Å—è –∞–¥–µ–∫–≤–∞—Ç–Ω–æ–π –∑–∞–¥–∞–Ω–Ω—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º –∏ –¢–ó? (—Ç—ã—Å.‚ÇΩ)",
    {
      reply_markup: {
        keyboard: budgetOptions.map((e) => [e]),
        one_time_keyboard: true,
      },
    }
  );
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –±—é–¥–∂–µ—Ç–∞
async function handleBudget(chatId, text) {
  if (!budgetOptions.includes(text)) {
    return bot.sendMessage(chatId, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.");
  }
  userState[chatId].budget = text;
  await askThreeWords(chatId);
}

// –í–æ–ø—Ä–æ—Å –æ —Ç—Ä–µ—Ö —Å–ª–æ–≤–∞—Ö
async function askThreeWords(chatId) {
  userState[chatId].step = 7;
  await bot.sendMessage(
    chatId,
    "üîÆ –ö–∞–∫–∏–º–∏ 3 —Å–ª–æ–≤–∞–º–∏ –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –∑–∞–ø–æ–º–Ω–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ?",
    {
      reply_markup: {
        inline_keyboard: [
          [{ text: "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å", callback_data: "skip_words" }],
        ],
      },
    }
  );
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç—Ä–µ—Ö —Å–ª–æ–≤
async function handleThreeWords(chatId, text) {
  const words = text.split(/\s+/);
  if (words.length !== 3) {
    return bot.sendMessage(
      chatId,
      "–í–≤–µ–¥–∏—Ç–µ —Ä–æ–≤–Ω–æ —Ç—Ä–∏ —Å–ª–æ–≤–∞, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–µ–ª–æ–º."
    );
  }
  userState[chatId].threeWords = text;
  await askImageChoice(chatId);
}

// –í—ã–±–æ—Ä –∫–∞—Ä—Ç–∏–Ω–∫–∏
async function askImageChoice(chatId) {
  userState[chatId].step = 8;

  const images = [
    {
      url: "https://vel-agency.sps.center/wp-content/uploads/2024/10/card_quiz_4_vel-e1740539781897.png",
      caption: "–î–µ–≤—É—à–∫–∞ —Å —Å–∏–Ω–∏–º–∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä–∞–º–∏ (–ø–µ—Ä–≤–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ —Å–ª–µ–≤–∞)",
      title: "–î–µ–≤—É—à–∫–∞ —Å –∞–∫—Å–µ—Å—Å—É–∞—Ä–∞–º–∏",
    },
    {
      url: "https://vel-agency.sps.center/wp-content/uploads/2024/10/card_quiz_3_vel-e1740539861115.png",
      caption: "–£—é—Ç–Ω–∞—è —Å–ø–∞–ª—å–Ω—è —Å –∂—ë–ª—Ç—ã–º–∏ —à—Ç–æ—Ä–∞–º–∏ (–≤–µ—Ä—Ö–Ω—è—è —Å–ø—Ä–∞–≤–∞)",
      title: "–£—é—Ç–Ω–∞—è —Å–ø–∞–ª—å–Ω—è",
    },
    {
      url: "https://vel-agency.sps.center/wp-content/uploads/2024/10/card_quiz_2_vel-e1740539841526.png",
      caption: "–ó–µ–ª—ë–Ω—ã–µ –ª–∏—Å—Ç—å—è –≤–±–ª–∏–∑–∏ (–ø–æ —Ü–µ–Ω—Ç—Ä—É —Å–ø—Ä–∞–≤–∞)",
      title: "–ó–µ–ª—ë–Ω—ã–µ –ª–∏—Å—Ç—å—è",
    },
    {
      url: "https://vel-agency.sps.center/wp-content/uploads/2024/10/card_quiz_1_vel.png",
      caption: "–ñ–µ–Ω—â–∏–Ω–∞ –≤ —Ä–æ—Å–∫–æ—à–Ω–æ–º –æ–±—Ä–∞–∑–µ —Å —É–∫—Ä–∞—à–µ–Ω–∏—è–º–∏ (–Ω–∏–∂–Ω—è—è —Å–ø—Ä–∞–≤–∞)",
      title: "–ñ–µ–Ω—â–∏–Ω–∞ —Å —É–∫—Ä–∞—à–µ–Ω–∏—è–º–∏",
    },
  ];

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞–∫ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—É
  const mediaGroup = images.map((img) => ({
    type: "photo",
    media: img.url,
    caption: img.caption,
    parse_mode: "Markdown",
  }));

  await bot.sendMediaGroup(chatId, mediaGroup);

  // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞
  await bot.sendMessage(chatId, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É, –∫–æ—Ç–æ—Ä–∞—è –≤–∞–º –Ω—Ä–∞–≤–∏—Ç—Å—è:", {
    reply_markup: {
      keyboard: images.map((img) => [img.title]), // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –∫–∞—Ä—Ç–∏–Ω–æ–∫
      one_time_keyboard: true,
    },
  });
}

async function handleImageChoice(chatId, text) {
  const imageOptions = {
    "–î–µ–≤—É—à–∫–∞ —Å –∞–∫—Å–µ—Å—Å—É–∞—Ä–∞–º–∏": "–ø–µ—Ä–≤–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ —Å–ª–µ–≤–∞",
    "–£—é—Ç–Ω–∞—è —Å–ø–∞–ª—å–Ω—è": "–≤–µ—Ä—Ö–Ω—è—è —Å–ø—Ä–∞–≤–∞",
    "–ó–µ–ª—ë–Ω—ã–µ –ª–∏—Å—Ç—å—è": "–ø–æ —Ü–µ–Ω—Ç—Ä—É —Å–ø—Ä–∞–≤–∞",
    "–ñ–µ–Ω—â–∏–Ω–∞ —Å —É–∫—Ä–∞—à–µ–Ω–∏—è–º–∏": "–Ω–∏–∂–Ω—è—è —Å–ø—Ä–∞–≤–∞",
  };

  if (!imageOptions.hasOwnProperty(text)) {
    return bot.sendMessage(chatId, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ.");
  }

  userState[chatId].imageChoice = `${text} (${imageOptions[text]})`;
  userState[chatId].step++;
  await askBonus(chatId);
}

// –í—ã–±–æ—Ä –±–æ–Ω—É—Å–∞
async function askBonus(chatId) {
  userState[chatId].step = 9;
  await bot.sendMessage(
    chatId,
    "üéÅ –õ—é–±–ª—é –¥–µ–ª–∞—Ç—å –ø–æ–¥–∞—Ä–∫–∏! –í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –±–æ–Ω—É—Å–æ–≤:",
    {
      reply_markup: {
        keyboard: bonusOptions.map((e) => [e]),
        one_time_keyboard: true,
      },
    }
  );
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –±–æ–Ω—É—Å–∞
async function handleBonus(chatId, text) {
  if (!bonusOptions.includes(text)) {
    return bot.sendMessage(chatId, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –±–æ–Ω—É—Å–æ–≤.");
  }
  userState[chatId].bonus = text;

  await bot.sendMessage(
    chatId,
    `‚úÖ –í–∞—à –±–æ–Ω—É—Å —É—á—Ç–µ–Ω! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –æ–ø—Ä–æ—Å–∞.\n\n‚úÖ –í–∞—à–∞ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${userState[chatId].totalPrice}‚ÇΩ\n–Ø —Å—Ç–∞—Ä–∞–ª—Å—è —Å—ç–∫–æ–Ω–æ–º–∏—Ç—å –Ω–∞—à–∏ –≤—Ä–µ–º—è –∏ –Ω–µ—Ä–≤—ã, –ø–æ—ç—Ç–æ–º—É —Å—Ç–æ–∏–º–æ—Å—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–Ω–∞—è –∏ –≤—Å–µ-—Ç–∞–∫–∏ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è. –û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–∞—è —Å–º–µ—Ç–∞ –ø–æ—Å–ª–µ –≤—Å—Ç—Ä–µ—á–∏ –∏ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã.`,
    {
      reply_markup: {
        inline_keyboard: [
          [{ text: "–°–≤—è–∂–∏—Ç–µ –º–µ–Ω—è —Å —á–µ–ª–æ–≤–µ–∫–æ–º", callback_data: "contact_me" }],
          [
            {
              text: "–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –ø–∞–∫–µ—Ç–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è",
              callback_data: "package_offers",
            },
          ],
        ],
      },
    }
  );

  await sendAdminSummary(chatId);
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∞–¥–º–∏–Ω—É
async function sendAdminSummary(chatId) {
  const state = userState[chatId];
  const username = state.username || "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";

  const summaryMessage = `
  üì© *–ù–æ–≤—ã–π –æ–ø—Ä–æ—Å*\n
  üë§ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å*: ${username}\n
  üìÖ *–î–∞—Ç–∞*: ${state.date}\n
  üéâ *–°–æ–±—ã—Ç–∏–µ*: ${state.event}\n
  üë• *–ì–æ—Å—Ç–∏*: ${state.guestCount}\n
  üìç *–õ–æ–∫–∞—Ü–∏—è*: ${state.location}\n
  ‚è≥ *–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å*: ${state.hours} —á.\n
  üí∞ *–û–∂–∏–¥–∞–Ω–∏—è –ø–æ –±—é–¥–∂–µ—Ç—É*: ${state.budget} —Ç—ã—Å. ‚ÇΩ\n
  üîÆ *3 —Å–ª–æ–≤–∞ –ø—Ä–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ*: ${state.threeWords || "–ü—Ä–æ–ø—É—â–µ–Ω–æ"}\n
  üñº *–í—ã–±—Ä–∞–Ω–Ω—ã–π —Å—Ç–∏–ª—å*: –ö–∞—Ä—Ç–∏–Ω–∫–∞ ‚Ññ${state.imageChoice}\n
  üéÅ *–í—ã–±—Ä–∞–Ω–Ω—ã–π –±–æ–Ω—É—Å*: ${state.bonus}\n
  üì¶ *–í—ã–±—Ä–∞–Ω–Ω—ã–π –ø–∞–∫–µ—Ç —É—Å–ª—É–≥*: ${state.package || "–ù–µ –≤—ã–±—Ä–∞–Ω–æ"}\n
  üíµ *–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å*: ${state.totalPrice}‚ÇΩ
  `;

  await bot.sendMessage(ADMIN_CHAT_ID, summaryMessage, {
    parse_mode: "Markdown",
  });
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ "–°–≤—è–∂–∏—Ç–µ –º–µ–Ω—è —Å —á–µ–ª–æ–≤–µ–∫–æ–º"
bot.on("callback_query", async (callbackQuery) => {
  const chatId = callbackQuery.message.chat.id;
  const username = userState[chatId].username || "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";

  if (callbackQuery.data === "contact_me") {
    await bot.sendMessage(
      ADMIN_CHAT_ID,
      `üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${username}\nüí¨ –ù–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–°–≤—è–∂–∏—Ç–µ –º–µ–Ω—è —Å —á–µ–ª–æ–≤–µ–∫–æ–º".`
    );
    await bot.sendMessage(
      chatId,
      "–í–∞—à –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –ú—ã —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è!"
    );
  }

  if (callbackQuery.data === "package_offers") {
    await askPackageOffer(chatId);
  }
});

// –í—ã–±–æ—Ä –ø–∞–∫–µ—Ç–Ω—ã—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
async function askPackageOffer(chatId) {
  userState[chatId].step = 10;
  await bot.sendMessage(
    chatId,
    "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–µ –≤–∞—Å –ø–∞–∫–µ—Ç–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ:",
    {
      reply_markup: {
        keyboard: [
          ["–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤"],
          ["–í—ã–ø—É—Å–∫–Ω–æ–π"],
          ["–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è"],
          ["–°–≤–∞–¥—å–±–∞"],
        ],
        one_time_keyboard: true,
      },
    }
  );
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–∞–∫–µ—Ç–∞
async function handlePackageChoice(chatId, text) {
  const packageImages = {
    –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤: ["./images/corporate1.jpg"],
    –í—ã–ø—É—Å–∫–Ω–æ–π: ["./images/graduation1.jpg", "./images/graduation2.jpg"],
    "–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è": ["./images/birthday1.jpg"],
    –°–≤–∞–¥—å–±–∞: ["./images/wedding1.jpg", "./images/wedding2.jpg"],
  };

  if (!packageImages[text]) {
    return bot.sendMessage(chatId, "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤.");
  }

  for (const image of packageImages[text]) {
    await bot.sendPhoto(chatId, image);
  }

  await bot.sendMessage(chatId, "üîπ –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ:", {
    reply_markup: {
      inline_keyboard: [
        [{ text: "–°–≤—è–∂–∏—Ç–µ –º–µ–Ω—è —Å —á–µ–ª–æ–≤–µ–∫–æ–º", callback_data: "contact_me" }],
        [
          {
            text: "–î—Ä—É–≥–∏–µ –ø–∞–∫–µ—Ç–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è",
            callback_data: "package_offers",
          },
        ],
      ],
    },
  });
}

function isRateLimited(chatId) {
  const now = Date.now();
  if (rateLimit[chatId] && now - rateLimit[chatId] < 60000) {
    return true;
  }
  rateLimit[chatId] = now;
  return false;
}

bot.onText(/\/survey/, async (msg) => {
  const chatId = msg.chat.id;
  if (isRateLimited(chatId)) {
    return bot.sendMessage(
      chatId,
      "‚õî –ü–æ–¥–æ–∂–¥–∏—Ç–µ –º–∏–Ω—É—Ç—É –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –∑–∞–ø—É—Å–∫–æ–º –æ–ø—Ä–æ—Å–∞."
    );
  }
  userState[chatId] = {};
  await bot.sendMessage(
    chatId,
    "üìÜ –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 15 —è–Ω–≤–∞—Ä—è)"
  );
});

async function checkUserContact(chatId) {
  const user = await bot.getChat(chatId);
  if (!user.username && !user.phone_number) {
    await bot.sendMessage(
      chatId,
      "–ú—ã –Ω–µ –º–æ–∂–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å: @yuriy_vel."
    );
    return false;
  }
  return user.username || user.phone_number || "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";
}

bot.on("callback_query", async (callbackQuery) => {
  const chatId = callbackQuery.message.chat.id;

  if (callbackQuery.data === "contact_me") {
    const contactInfo = await checkUserContact(chatId);
    if (!contactInfo) return;

    await bot.sendMessage(
      ADMIN_CHAT_ID,
      `üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!\nüë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${contactInfo}\nüí¨ –ù–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É "–°–≤—è–∂–∏—Ç–µ –º–µ–Ω—è —Å —á–µ–ª–æ–≤–µ–∫–æ–º".`
    );
    await bot.sendMessage(
      chatId,
      "–í–∞—à –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –ú—ã —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è!"
    );
  }
});

function getSeasonRate(day, monthInput) {
  const monthNames = {
    —è–Ω–≤–∞—Ä—å: "—è–Ω–≤–∞—Ä—å",
    —Ñ–µ–≤—Ä–∞–ª—å: "—Ñ–µ–≤—Ä–∞–ª—å",
    –º–∞—Ä—Ç: "–º–∞—Ä—Ç",
    –∞–ø—Ä–µ–ª—å: "–∞–ø—Ä–µ–ª—å",
    –º–∞–π: "–º–∞–π",
    –∏—é–Ω—å: "–∏—é–Ω—å",
    –∏—é–ª—å: "–∏—é–ª—å",
    –∞–≤–≥—É—Å—Ç: "–∞–≤–≥—É—Å—Ç",
    —Å–µ–Ω—Ç—è–±—Ä—å: "—Å–µ–Ω—Ç—è–±—Ä—å",
    –æ–∫—Ç—è–±—Ä—å: "–æ–∫—Ç—è–±—Ä—å",
    –Ω–æ—è–±—Ä—å: "–Ω–æ—è–±—Ä—å",
    –¥–µ–∫–∞–±—Ä—å: "–¥–µ–∫–∞–±—Ä—å",
  };

  const month = monthInput.toLowerCase();
  if (!monthNames[month]) return null;

  if (month === "–¥–µ–∫–∞–±—Ä—å") {
    return day < 15 ? seasonRates[month]["–¥–æ 14"] : seasonRates[month]["—Å 15"];
  }

  const dateString = `${day} ${month} 2024`; // –î–æ–±–∞–≤–ª—è–µ–º –≥–æ–¥ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–Ω—è –Ω–µ–¥–µ–ª–∏
  const weekday = moment(dateString, "D MMMM YYYY").isoWeekday();

  return weekday < 5
    ? seasonRates[month]["–≤—Å-—á—Ç"]
    : seasonRates[month]["–ø—Ç-—Å–±"];
}
