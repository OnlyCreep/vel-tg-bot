const TelegramBot = require("node-telegram-bot-api");
const token = "7339008763:AAHU4_ZQ1jKwdmOfSMg6WvN0VLW7MNIRHv0";
const bot = new TelegramBot(token, { polling: true });

const adminChatId = 1032236389;
const guestOptions = ["–î–æ 50", "50-75", "76-100", "101-150", "151-200", "–ë–æ–ª–µ–µ 200"];
const eventOptions = ["–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤", "–°–≤–∞–¥—å–±–∞", "–í—ã–ø—É—Å–∫–Ω–æ–π", "–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è", "–û–±—É—á–µ–Ω–∏–µ/–¢–∏–º–±–∏–ª–¥–∏–Ω–≥", "–î—Ä—É–≥–æ–µ"];
const locationOptions = ["–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫", "–ü—Ä–∏–≥–æ—Ä–æ–¥ (–¥–æ 30 –∫–º)", "–î—Ä—É–≥–æ–µ"];
const budgetOptions = ["30-50", "51-75", "76-100", "101-150", "151-200", "–ë–æ–ª–µ–µ 200"];
const seasonRates = {
  "—è–Ω–≤–∞—Ä—å": { "–≤—Å-—á—Ç": 11000, "–ø—Ç-—Å–±": 14000 },
  "—Ñ–µ–≤—Ä–∞–ª—å": { "–≤—Å-—á—Ç": 11000, "–ø—Ç-—Å–±": 14000 },
  "–º–∞—Ä—Ç": { "–≤—Å-—á—Ç": 11000, "–ø—Ç-—Å–±": 14000 },
  "–∞–ø—Ä–µ–ª—å": { "–≤—Å-—á—Ç": 11000, "–ø—Ç-—Å–±": 14000 },
  "–º–∞–π": { "–≤—Å-—á—Ç": 11000, "–ø—Ç-—Å–±": 14000 },
  "–∏—é–Ω—å": { "–≤—Å-—á—Ç": 14000, "–ø—Ç-—Å–±": 15000 },
  "–∏—é–ª—å": { "–≤—Å-—á—Ç": 14000, "–ø—Ç-—Å–±": 15000 },
  "–∞–≤–≥—É—Å—Ç": { "–≤—Å-—á—Ç": 14000, "–ø—Ç-—Å–±": 15000 },
  "—Å–µ–Ω—Ç—è–±—Ä—å": { "–≤—Å-—á—Ç": 11000, "–ø—Ç-—Å–±": 14000 },
  "–æ–∫—Ç—è–±—Ä—å": { "–≤—Å-—á—Ç": 11000, "–ø—Ç-—Å–±": 14000 },
  "–Ω–æ—è–±—Ä—å": { "–≤—Å-—á—Ç": 11000, "–ø—Ç-—Å–±": 14000 },
  "–¥–µ–∫–∞–±—Ä—å": { "–¥–æ 14": 14000, "—Å 15": 15000 }
};
const guestMultiplier = {
  "–î–æ 50": 1,
  "50-75": 1.1,
  "76-100": 1.2,
  "101-150": 1.7,
  "151-200": 2,
  "–ë–æ–ª–µ–µ 200": 2.5
};
const locationExtra = {
  "–ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫": 0,
  "–ü—Ä–∏–≥–æ—Ä–æ–¥ (–¥–æ 30 –∫–º)": 5000,
  "–î—Ä—É–≥–æ–µ": 1.5
};
let userSessions = {};
let lastSurveyTime = {};

const images = [
  { url: "https://vel-agency.sps.center/wp-content/uploads/2024/10/card_quiz_4_vel-e1740539781897.png", caption: "–î–µ–≤—É—à–∫–∞ —Å —Å–∏–Ω–∏–º–∏ –ø–ª–µ—Ç—ë–Ω—ã–º–∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä–∞–º–∏ (–ø–µ—Ä–≤–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ —Å–ª–µ–≤–∞)" },
  { url: "https://vel-agency.sps.center/wp-content/uploads/2024/10/card_quiz_3_vel-e1740539861115.png", caption: "–£—é—Ç–Ω–∞—è —Å–ø–∞–ª—å–Ω—è —Å –∂—ë–ª—Ç—ã–º–∏ —à—Ç–æ—Ä–∞–º–∏ (–≤–µ—Ä—Ö–Ω—è—è —Å–ø—Ä–∞–≤–∞)" },
  { url: "https://vel-agency.sps.center/wp-content/uploads/2024/10/card_quiz_2_vel-e1740539841526.png", caption: "–ó–µ–ª—ë–Ω—ã–µ –ª–∏—Å—Ç—å—è –≤–±–ª–∏–∑–∏ (–ø–æ —Ü–µ–Ω—Ç—Ä—É —Å–ø—Ä–∞–≤–∞)" },
  { url: "https://vel-agency.sps.center/wp-content/uploads/2024/10/card_quiz_1_vel.png", caption: "–ñ–µ–Ω—â–∏–Ω–∞ –≤ —Ä–æ—Å–∫–æ—à–Ω–æ–º –æ–±—Ä–∞–∑–µ —Å —É–∫—Ä–∞—à–µ–Ω–∏—è–º–∏ (–Ω–∏–∂–Ω—è—è —Å–ø—Ä–∞–≤–∞)" }
];

function calculatePrice(session) {
  let baseRate = getBaseRate(session.date);
  let guestFactor = guestMultiplier[session.guests] || 1;
  let locationFactor = locationExtra[session.location] || 1;
  let totalPrice = baseRate * session.hours * guestFactor;
  return totalPrice;
}

function getBaseRate(dateString) {
  const months = {
    "—è–Ω–≤–∞—Ä—å": 1, "—Ñ–µ–≤—Ä–∞–ª—å": 2, "–º–∞—Ä—Ç": 3, "–∞–ø—Ä–µ–ª—å": 4, "–º–∞–π": 5,
    "–∏—é–Ω—å": 6, "–∏—é–ª—å": 7, "–∞–≤–≥—É—Å—Ç": 8, "—Å–µ–Ω—Ç—è–±—Ä—å": 9, "–æ–∫—Ç—è–±—Ä—å": 10, "–Ω–æ—è–±—Ä—å": 11, "–¥–µ–∫–∞–±—Ä—å": 12
  };
  
  let date = parseDate(dateString);
  let monthName = Object.keys(months).find(m => dateString.toLowerCase().includes(m)) || Object.keys(months)[date.getMonth()];
  let day = date.getDate();
  let dayOfWeek = date.getDay();
  let rateType = dayOfWeek >= 5 ? "–ø—Ç-—Å–±" : "–≤—Å-—á—Ç";
  if (monthName === "–¥–µ–∫–∞–±—Ä—å" && day >= 15) {
    return seasonRates["–¥–µ–∫–∞–±—Ä—å"]["—Å 15"];
  }
  return seasonRates[monthName][rateType];
}

function parseDate(input) {
  let date = new Date();
  if (!isNaN(input)) {
    date.setDate(parseInt(input));
  } else {
    let parsedDate = Date.parse(input);
    if (!isNaN(parsedDate)) {
      date = new Date(parsedDate);
    }
  }
  return date;
}

function askDate(chatId) {
  bot.sendMessage(chatId, "üìÜ –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 15 —è–Ω–≤–∞—Ä—è –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —á–∏—Å–ª–æ –º–µ—Å—è—Ü–∞)");
}

function askGuests(chatId) {
  bot.sendMessage(chatId, "üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π?", {
    reply_markup: { keyboard: guestOptions.map(opt => [opt]), one_time_keyboard: true }
  });
}

bot.onText(/\/start/, (msg) => {
  bot.sendMessage(msg.chat.id, "–í–∞–∂–Ω—ã–º–∏ —Ñ–∞–∫—Ç–æ—Ä–∞–º–∏ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞ —è–≤–ª—è–µ—Ç—Å—è —Å–ª–∞–∂–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –≤–µ–¥—É—â–µ–≥–æ –∏ DJ, –∞ —Ç–∞–∫–∂–µ –Ω–∞–ª–∏—á–∏–µ —Ö–æ—Ä–æ—à–µ–≥–æ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è. –°—Ç–æ–∏–º–æ—Å—Ç—å –≤–∫–ª—é—á–∞–µ—Ç —ç—Ç–∏ –ø–æ–∑–∏—Ü–∏–∏.\n\n(–í–µ–¥—É—â–∏–π+DJ+–û–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ)");
});

bot.onText(/\/survey/, (msg) => {
  const chatId = msg.chat.id;
  const userId = msg.from.id;
  const username = msg.from.username || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π";
  const now = Date.now();

  if (lastSurveyTime[userId] && now - lastSurveyTime[userId] < 60000) {
    return bot.sendMessage(chatId, "‚õî –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ 1 –º–∏–Ω—É—Ç—É –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω—ã–º –∑–∞–ø—É—Å–∫–æ–º –æ–ø—Ä–æ—Å–∞.");
  }

  lastSurveyTime[userId] = now;
  userSessions[chatId] = { userId, username };
  askDate(chatId);
});

function askImageSelection(chatId) {
  const mediaGroup = images.map(img => ({
    type: "photo",
    media: img.url,
    caption: img.caption
  }));

  bot.sendMediaGroup(chatId, mediaGroup).then(() => {
    bot.sendMessage(chatId, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ –¥—É—à–µ:", {
      reply_markup: {
        keyboard: images.map(img => [img.caption]),
        one_time_keyboard: true,
      }
    });
  });
}

function askBonusSelection(chatId) {
  bot.sendMessage(chatId, "üéÅ –õ—é–±–ª—é –¥–µ–ª–∞—Ç—å –ø–æ–¥–∞—Ä–∫–∏. –ü—Ä–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–∞—Ç—ã –≤ —Ç–µ—á–µ–Ω–∏–µ —Å—É—Ç–æ–∫, –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –±–æ–Ω—É—Å–æ–≤:\n1) –î–æ–ø. —á–∞—Å —Ä–∞–±–æ—Ç—ã –¥–∏–¥–∂–µ—è\n2) 1.5 —á–∞—Å–∞ —Ä–∞–±–æ—Ç—ã —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∞\n3) 1.5 —á–∞—Å–∞ —Ä–∞–±–æ—Ç—ã —Ä–∏–ª—Å–º–µ–π–∫–µ—Ä–∞", {
    reply_markup: { keyboard: [["–î–æ–ø. —á–∞—Å –¥–∏–¥–∂–µ—è"], ["1.5 —á–∞—Å–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∞"], ["1.5 —á–∞—Å–∞ —Ä–∏–ª—Å–º–µ–π–∫–µ—Ä–∞"]], one_time_keyboard: true },
  });
}

function sendSummary(chatId) {
  const session = userSessions[chatId];
  let totalPrice = calculatePrice(session);

  const summaryMessage = `üì© *–ù–æ–≤—ã–π –æ–ø—Ä–æ—Å*\n` +
    `üë§ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å*: @${session.username}\n` +
    `üìÖ *–î–∞—Ç–∞*: ${session.date}\n` +
    `üéâ *–°–æ–±—ã—Ç–∏–µ*: ${session.event}\n` +
    `üë• *–ì–æ—Å—Ç–∏*: ${session.guests}\n` +
    `üìç *–õ–æ–∫–∞—Ü–∏—è*: ${session.location}\n` +
    `‚è≥ *–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å*: ${session.hours} —á.\n` +
    `üí∞ *–û–∂–∏–¥–∞–Ω–∏—è –ø–æ –±—é–¥–∂–µ—Ç—É*: ${session.budget} —Ç—ã—Å. ‚ÇΩ\n` +
    `üîÆ *3 —Å–ª–æ–≤–∞ –ø—Ä–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ*: ${session.words}\n` +
    `üñº *–í—ã–±—Ä–∞–Ω–Ω—ã–π —Å—Ç–∏–ª—å*: ${session.selectedImage}\n` +
    `üéÅ *–í—ã–±—Ä–∞–Ω–Ω—ã–π –±–æ–Ω—É—Å*: ${session.bonus}\n` +
    `üíµ *–ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å*: ${totalPrice.toLocaleString()}‚ÇΩ`;

    
    bot.sendMessage(chatId, `‚úÖ –í–∞—à–∞ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${totalPrice.toLocaleString()}‚ÇΩ`);
    bot.sendMessage(adminChatId, `–ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –æ—Ç @${msg.from.username}\n –°–æ–æ–±—â–µ–Ω–∏–µ:\n${summaryMessage}`);

  delete userSessions[chatId];
}

bot.on("message", (msg) => {
  const chatId = msg.chat.id;
  if (!userSessions[chatId]) return;

  const session = userSessions[chatId];
  const text = msg.text;

  if (!session.date) {
    session.date = text;
    askEvent(chatId);
  } else if (!session.event) {
    if (!eventOptions.includes(text)) return askEvent(chatId, true);
    session.event = text;
    askGuests(chatId);
  } else if (!session.guests) {
    if (!guestOptions.includes(text)) return askGuests(chatId, true);
    session.guests = text;
    askLocation(chatId);
  } else if (!session.location) {
    if (!locationOptions.includes(text)) return askLocation(chatId, true);
    session.location = text;
    askHours(chatId);
  } else if (!session.hours) {
    if (isNaN(text) || parseInt(text) <= 0) return bot.sendMessage(chatId, "‚õî –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å–æ–≤ —Ü–∏—Ñ—Ä–∞–º–∏!");
    session.hours = parseInt(text);
    askBudget(chatId);
  } else if (!session.budget) {
    if (!budgetOptions.includes(text)) return askBudget(chatId, true);
    session.budget = text;
    askWords(chatId);
  } else if (!session.words) {
    session.words = text;
    askImageSelection(chatId);
  } else if (!session.selectedImage) {
    if (!images.some(img => img.caption === text)) return;
    session.selectedImage = text;
    askBonusSelection(chatId);
  } else if (!session.bonus) {
    if (!["–î–æ–ø. —á–∞—Å –¥–∏–¥–∂–µ—è", "1.5 —á–∞—Å–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∞", "1.5 —á–∞—Å–∞ —Ä–∏–ª—Å–º–µ–π–∫–µ—Ä–∞"].includes(text)) return;
    session.bonus = text;
    bot.sendMessage(chatId, "‚úÖ –í–∞—à –±–æ–Ω—É—Å —É—á—Ç–µ–Ω! –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å...");
    sendSummary(chatId);
    delete userSessions[chatId];
  }
});

function askEvent(chatId, retry = false) {
  bot.sendMessage(chatId, retry ? "‚õî –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞!" : "üéâ –ö–∞–∫–æ–µ —Å–æ–±—ã—Ç–∏–µ?", {
    reply_markup: {
      keyboard: eventOptions.map(opt => [opt]),
      one_time_keyboard: true,
    },
  });
}

function askGuests(chatId, retry = false) {
  bot.sendMessage(chatId, retry ? "‚õî –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞!" : "üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π:", {
    reply_markup: {
      keyboard: guestOptions.map(opt => [opt]),
      one_time_keyboard: true,
    },
  });
}

function askLocation(chatId, retry = false) {
  bot.sendMessage(chatId, retry ? "‚õî –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞!" : "üìç –ì–¥–µ –ø—Ä–æ–π–¥–µ—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ?", {
    reply_markup: {
      keyboard: locationOptions.map(opt => [opt]),
      one_time_keyboard: true,
    },
  });
}

function askDate(chatId) {
  bot.sendMessage(chatId, "üìÜ –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è");
}

function askHours(chatId) {
  bot.sendMessage(chatId, "‚è≥ –°–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ –±—É–¥–µ—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ?");
}

function askBudget(chatId, retry = false) {
  bot.sendMessage(chatId, retry ? "‚õî –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞!" : "üí∞ –ö–∞–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –∫–∞–∂–µ—Ç—Å—è –∞–¥–µ–∫–≤–∞—Ç–Ω–æ–π? (–≤ —Ç—ã—Å—è—á–∞—Ö —Ä—É–±–ª–µ–π)", {
    reply_markup: {
      keyboard: budgetOptions.map(opt => [opt]),
      one_time_keyboard: true,
    },
  });
}

function askWords(chatId) {
  bot.sendMessage(chatId, "üîÆ –ö–∞–∫–∏–º–∏ 3 —Å–ª–æ–≤–∞–º–∏ –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –∑–∞–ø–æ–º–Ω–∏—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ?");
}